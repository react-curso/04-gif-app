{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","setCategories","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAgB1C,OACK,oCACK,0BAAMC,SAVK,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAW,SAAAS,GAAC,OAAMP,GAAN,mBAAqBO,OACjCN,EAAc,OAOT,2BACKO,KAAK,OACLC,MAAOT,EACPU,SAlBM,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,uBCRpBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACP,mCACNC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACP,oCADO,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAVhB,kBAaZM,GAbY,4CAAH,sDCGPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAKA,EAAL,OCDCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/B2B,OAAO,GACPO,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLT,OAAQY,EACRL,SAAS,SAInB,CAACpB,IAEIqB,EDdqBK,CAAa1B,GAAjCa,EAF6B,EAE7BA,OAAQO,EAFqB,EAErBA,QAEhB,OACI,oCACI,gCAAMpB,EAAN,KAEEoB,GAAW,sCAEb,yBAAKJ,UAAU,aAEPH,EAAOJ,KAAI,SAACC,GAAD,OAEP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UElBnBkB,EAAe,WAAO,IAAD,EAEQ1C,mBAAS,CAAC,KAFlB,mBAErBD,EAFqB,KAET4C,EAFS,KAM7B,OACK,oCACK,wBAAIlB,GAAG,SAAP,gBAEA,kBAAC,EAAD,CAAa1B,WAAa4C,IAE1B,6BAEA,4BAEU5C,EAAWwB,KAAK,SAAAf,GACX,OAAO,kBAAC,EAAD,CAASiC,IAAKjC,EAAGM,SAAUN,U,MChBhEoC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e4af52e6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ categories }) => { \r\n\r\n     const [inputValue, setInputValue] = useState('');\r\n\r\n     const handleInputChange = (e) => {\r\n          setInputValue(e.target.value);\r\n     }\r\n\r\n     const handleSubmit = (e) => {\r\n          e.preventDefault();\r\n          if (inputValue.trim().length > 2) {\r\n               categories(c => [ inputValue, ...c]);\r\n               setInputValue('');\r\n          }\r\n     }\r\n\r\n     return (\r\n          <>\r\n               <form onSubmit={handleSubmit} >\r\n                    <input\r\n                         type=\"text\"\r\n                         value={inputValue}\r\n                         onChange={handleInputChange}\r\n                    />\r\n               </form>\r\n          </>\r\n     )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n     categories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async ( category ) => {\r\n    const key = 'IIA6wnqmBCxcRoRAUdqXXu3bdAUw81ZL';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=${key}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            { loading && <p>Loading</p> }            \r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        images:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs(category)\r\n        .then( imgs  => {\r\n            setState({\r\n                images: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n\r\n    },[category] )\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n     \r\n      const [categories, setCategories] = useState(['']);\r\n     \r\n     //      setCategories( c => [...c, 'Goku'] );\r\n\r\n     return (\r\n          <>\r\n               <h2 id=\"title\">GifExpertApp</h2>\r\n\r\n               <AddCategory categories={ setCategories } />\r\n               \r\n               <hr />\r\n                    \r\n               <ol>\r\n                    {\r\n                         categories.map( c => {\r\n                              return <GifGrid key={c} category={c} />\r\n                         })\r\n                    }\r\n               </ol>\r\n\r\n          </>\r\n     )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}